name: Terraform Backend

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: false
        default: ${{ github.ref_name }}

jobs:
  check-backend:
    name: Check Terraform Backend
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checks for Terraform Backend environment variables
        if: ${{ !vars.TERRAFORM_BACKEND_KMS_KEY_ARN && !vars.TERRAFORM_BACKEND_BUCKET_ARN && !vars.TERRAFORM_BACKEND_DYNAMODB_TABLE }}
        run: |
          echo "environment: ${{ inputs.environment }}"
          echo "vars: ${{ toJSON(vars) }}"
  create-backend:
    name: Creates Terraform Backend
    if: !cancelled()
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: .github/workflows/terraform/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: Set up Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_wrapper: false

      # - name: Terraform Init
      #   run: terraform init

      # - name: Terraform Plan
      #   run: terraform plan

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve

      # - name: Get Terraform Output
      #   run: |
      #     echo "bucket_arn=$(terraform output -raw bucket_arn)" >> $GITHUB_ENV
      #     echo "kms_key_arn=$(terraform output -raw kms_key_arn)" >> $GITHUB_ENV
      #     echo "dynamodb_table=$(terraform output -raw dynamodb_table)" >> $GITHUB_ENV

      # - name: Set up Github CLI
      #   run: |
      #     (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
      #     && sudo mkdir -p -m 755 /etc/apt/keyrings \
      #     && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
      #     && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
      #     && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
      #     && sudo apt update \
      #     && sudo apt install gh -y

      # - name: Save outputs to repository environment
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh variable set TERRAFORM_BACKEND_BUCKET_ARN -b "${{ env.bucket_arn }}" -e "$${{ inputs.environment }}"
      #     gh variable set TERRAFORM_BACKEND_KMS_KEY_ARN -b "${{ env.kms_key_arn }}" -e "$${{ inputs.environment }}"
      #     gh variable set TERRAFORM_BACKEND_DYNAMODB_TABLE -b "${{ env.dynamodb_table }}" -e "$${{ inputs.environment }}"
